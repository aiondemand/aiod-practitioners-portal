# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401

from app.schemas.aiod_generated.checksum import Checksum


class DataDownload(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    DataDownload - a model defined in OpenAPI

        content_url: The content_url of this DataDownload.
        content_size_kb: The content_size_kb of this DataDownload [Optional].
        description: The description of this DataDownload [Optional].
        encoding_format: The encoding_format of this DataDownload [Optional].
        name: The name of this DataDownload [Optional].
        checksum: The checksum of this DataDownload [Optional].
    """

    content_url: str = Field(alias="content_url")
    content_size_kb: Optional[int] = Field(alias="content_size_kb", default=None)
    description: Optional[str] = Field(alias="description", default=None)
    encoding_format: Optional[str] = Field(alias="encoding_format", default=None)
    name: Optional[str] = Field(alias="name", default=None)
    checksum: Optional[List[Checksum]] = Field(alias="checksum", default=None)

    @validator("content_url")
    def content_url_max_length(cls, value):
        assert len(value) <= 250
        return value

    @validator("description")
    def description_max_length(cls, value):
        assert len(value) <= 5000
        return value

    @validator("encoding_format")
    def encoding_format_max_length(cls, value):
        assert len(value) <= 255
        return value

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 150
        return value


DataDownload.update_forward_refs()
