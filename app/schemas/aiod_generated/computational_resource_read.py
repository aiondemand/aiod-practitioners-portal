# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401

from app.schemas.aiod_generated.computational_resource_distribution import (
    ComputationalResourceDistribution,
)


class ComputationalResourceRead(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ComputationalResourceRead - a model defined in OpenAPI

        platform: The platform of this ComputationalResourceRead [Optional].
        platform_identifier: The platform_identifier of this ComputationalResourceRead [Optional].
        name: The name of this ComputationalResourceRead.
        description: The description of this ComputationalResourceRead [Optional].
        logo: The logo of this ComputationalResourceRead [Optional].
        creation_time: The creation_time of this ComputationalResourceRead [Optional].
        validity: The validity of this ComputationalResourceRead [Optional].
        complexity: The complexity of this ComputationalResourceRead [Optional].
        location: The location of this ComputationalResourceRead [Optional].
        type: The type of this ComputationalResourceRead [Optional].
        quality_level: The quality_level of this ComputationalResourceRead [Optional].
        alternate_name: The alternate_name of this ComputationalResourceRead.
        capability: The capability of this ComputationalResourceRead.
        citation: The citation of this ComputationalResourceRead.
        keyword: The keyword of this ComputationalResourceRead.
        other_info: The other_info of this ComputationalResourceRead.
        research_area: The research_area of this ComputationalResourceRead.
        application_area: The application_area of this ComputationalResourceRead.
        is_part_of: The is_part_of of this ComputationalResourceRead.
        has_part: The has_part of this ComputationalResourceRead.
        creator: The creator of this ComputationalResourceRead.
        contact: The contact of this ComputationalResourceRead.
        managed_by: The managed_by of this ComputationalResourceRead.
        distribution: The distribution of this ComputationalResourceRead.
        status_info: The status_info of this ComputationalResourceRead.
        has_share: The has_share of this ComputationalResourceRead.
        service: The service of this ComputationalResourceRead.
        has_endpoint: The has_endpoint of this ComputationalResourceRead.
        identifier: The identifier of this ComputationalResourceRead.
    """

    platform: Optional[str] = Field(alias="platform", default=None)
    platform_identifier: Optional[str] = Field(
        alias="platform_identifier", default=None
    )
    name: str = Field(alias="name")
    description: Optional[str] = Field(alias="description", default=None)
    logo: Optional[str] = Field(alias="logo", default=None)
    creation_time: Optional[datetime] = Field(alias="creationTime", default=None)
    validity: Optional[int] = Field(alias="validity", default=None)
    complexity: Optional[str] = Field(alias="complexity", default=None)
    location: Optional[str] = Field(alias="location", default=None)
    type: Optional[str] = Field(alias="type", default=None)
    quality_level: Optional[str] = Field(alias="qualityLevel", default=None)
    alternate_name: List[str] = Field(alias="alternateName")
    capability: List[str] = Field(alias="capability")
    citation: List[str] = Field(alias="citation")
    keyword: List[str] = Field(alias="keyword")
    other_info: List[str] = Field(alias="otherInfo")
    research_area: List[str] = Field(alias="researchArea")
    application_area: List[str] = Field(alias="applicationArea")
    is_part_of: List[int] = Field(alias="isPartOf")
    has_part: List[int] = Field(alias="hasPart")
    creator: List[int] = Field(alias="creator")
    contact: List[int] = Field(alias="contact")
    managed_by: List[int] = Field(alias="managedBy")
    distribution: List[ComputationalResourceDistribution] = Field(alias="distribution")
    status_info: List[str] = Field(alias="statusInfo")
    has_share: List[str] = Field(alias="hasShare")
    service: List[str] = Field(alias="service")
    has_endpoint: List[str] = Field(alias="hasEndpoint")
    identifier: int = Field(alias="identifier")

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 150
        return value

    @validator("description")
    def description_max_length(cls, value):
        assert len(value) <= 5000
        return value

    @validator("logo")
    def logo_max_length(cls, value):
        assert len(value) <= 250
        return value

    @validator("complexity")
    def complexity_max_length(cls, value):
        assert len(value) <= 250
        return value

    @validator("location")
    def location_max_length(cls, value):
        assert len(value) <= 500
        return value

    @validator("type")
    def type_max_length(cls, value):
        assert len(value) <= 500
        return value

    @validator("quality_level")
    def quality_level_max_length(cls, value):
        assert len(value) <= 500
        return value


ComputationalResourceRead.update_forward_refs()
